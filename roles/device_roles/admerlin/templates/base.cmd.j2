
dbLoadDatabase("{{ deploy_ioc_template_root_path }}/dbd/{{ deploy_ioc_executable }}.dbd")
{{ deploy_ioc_executable }}_registerRecordDeviceDriver(pdbbase)

# admerlin specific commands

drvAsynIPPortConfigure($(COMMAND_PORT), $(MERLIN_IP):$(COMMAND_IPPORT), 0, 0, 0)
asynOctetSetOutputEos($(COMMAND_PORT), 0, "\n")
asynOctetSetInputEos($(COMMAND_PORT), 0, "\n")

drvAsynIPPortConfigure($(DATA_PORT), $(MERLIN_IP):$(DATA_IPPORT), 0, 0, 0)

# merlinDetectorConfig(
#              portName,           # The name of the asyn port to be created
#              LabviewCommandPort, # The name of the asyn port previously created with drvAsynIPPortConfigure to
#                                    communicate with Labview for commands.
#              LabviewDataPort,    # The name of the asyn port previously created with drvAsynIPPortConfigure to
#                                    communicate with Labview for data.
#              maxSizeX,           # The size of the merlin detector in the X direction.
#              maxSizeY,           # The size of the merlin detector in the Y direction.
#              detectorType,       # The type of detector. 0=Merlin, 1=MedipixXBPM, 2=UomXBPM, 3=MerlinQuad
#              maxBuffers,         # The maximum number of NDArray buffers that the NDArrayPool for this driver is
#                                    allowed to allocate. Set this to 0 to allow an unlimited number of buffers.
#              maxMemory,          # The maximum amount of memory that the NDArrayPool for this driver is
#                                    allowed to allocate. Set this to 0 to allow an unlimited amount of memory.
#              priority,           # The thread priority for the asyn port driver thread if ASYN_CANBLOCK is set in asynFlags.
#              stackSize,          # The stack size for the asyn port driver thread if ASYN_CANBLOCK is set in asynFlags.

# This is for a Merlin quad
merlinDetectorConfig("$(PORT)", $(COMMAND_PORT), $(DATA_PORT), $(XSIZE), $(YSIZE), $(MODEL), 0, 0, 0, 0)

asynSetTraceIOMask("$(PORT)",0,2)
#asynSetTraceMask("$(PORT)",0,255)

dbLoadRecords("$(ADMERLIN)/db/merlin.template","P=$(PREFIX),R=cam1:,PORT=$(PORT),ADDR=0,TIMEOUT=1")

set_requestfile_path("$(ADMERLIN)/merlinApp/Db")
